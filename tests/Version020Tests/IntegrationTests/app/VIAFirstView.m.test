#import "VIAFirstView.h"
#import "UIColor+VIAColors.h"
#import "UIFont+VIAFonts.h"

@interface VIAFirstView ()

@property (nonatomic, strong) UILabel* view1Label;
@property (nonatomic, strong) UITextField* view1Field;
@property (nonatomic, strong) UIButton* view1Button;
@property (nonatomic, strong) UIImageView* view1Image;

@end

@implementation VIAFirstView

#pragma mark - Lifecycle

- (instancetype)init {
  self = [super init];
  if (self) {
    [self setupViews];
    [self setupConstraints];
  }
  return self;
}

#pragma mark - Setup

- (void)setupViews {
  NSArray* subviews = @[self.view1Label, self.view1Field, self.view1Button, self.view1Image];
  for (UIView* view in subviews) {
    view.translatesAutoresizingMaskIntoConstraints = NO;
    [self addSubview:view];
  }
}

- (void)setupConstraints {
  NSLayoutAttribute* view1LabelHeight = [NSLayoutConstraint constraintWithItem:self.view1Label attribute:NSLayoutAttributeHeight relatedBy:NSLayoutRelationEquality toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1.0 constant:50];
  [self addConstraint:view1LabelHeight];
  NSLayoutAttribute* view1LabelWidth = [NSLayoutConstraint constraintWithItem:self.view1Label attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEquality toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1.0 constant:100];
  [self addConstraint:view1LabelWidth];
  NSLayoutAttribute* view1LabelLeft = [NSLayoutConstraint constraintWithItem:self.view1Label attribute:NSLayoutAttributeLeft relatedBy:NSLayoutRelationEquality toItem:self attribute:NSLayoutAttributeLeft multiplier:1.0 constant:40];
  [self addConstraint:view1LabelLeft];
  NSLayoutAttribute* view1LabelTop = [NSLayoutConstraint constraintWithItem:self.view1Label attribute:NSLayoutAttributeTop relatedBy:NSLayoutRelationEquality toItem:self attribute:NSLayoutAttributeTop multiplier:1.0 constant:40];
  [self addConstraint:view1LabelTop];
  NSLayoutAttribute* view1FieldHeight = [NSLayoutConstraint constraintWithItem:self.view1Field attribute:NSLayoutAttributeHeight relatedBy:NSLayoutRelationEquality toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1.0 constant:50];
  [self addConstraint:view1FieldHeight];
  NSLayoutAttribute* view1FieldWidth = [NSLayoutConstraint constraintWithItem:self.view1Field attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEquality toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1.0 constant:200];
  [self addConstraint:view1FieldWidth];
  NSLayoutAttribute* view1FieldLeft = [NSLayoutConstraint constraintWithItem:self.view1Field attribute:NSLayoutAttributeLeft relatedBy:NSLayoutRelationEquality toItem:self.view1Label attribute:NSLayoutAttributeLeft multiplier:1.0 constant:0];
  [self addConstraint:view1FieldLeft];
  NSLayoutAttribute* view1FieldTop = [NSLayoutConstraint constraintWithItem:self.view1Field attribute:NSLayoutAttributeTop relatedBy:NSLayoutRelationEquality toItem:self.view1Label attribute:NSLayoutAttributeBottom multiplier:1.0 constant:20];
  [self addConstraint:view1FieldTop];
  NSLayoutAttribute* view1ButtonHeight = [NSLayoutConstraint constraintWithItem:self.view1Button attribute:NSLayoutAttributeHeight relatedBy:NSLayoutRelationEquality toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1.0 constant:50];
  [self addConstraint:view1ButtonHeight];
  NSLayoutAttribute* view1ButtonWidth = [NSLayoutConstraint constraintWithItem:self.view1Button attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEquality toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1.0 constant:100];
  [self addConstraint:view1ButtonWidth];
  NSLayoutAttribute* view1ButtonLeft = [NSLayoutConstraint constraintWithItem:self.view1Button attribute:NSLayoutAttributeLeft relatedBy:NSLayoutRelationEquality toItem:self.view1Label attribute:NSLayoutAttributeLeft multiplier:1.0 constant:0];
  [self addConstraint:view1ButtonLeft];
  NSLayoutAttribute* view1ButtonTop = [NSLayoutConstraint constraintWithItem:self.view1Button attribute:NSLayoutAttributeTop relatedBy:NSLayoutRelationEquality toItem:self.view1Field attribute:NSLayoutAttributeBottom multiplier:1.0 constant:30];
  [self addConstraint:view1ButtonTop];
  NSLayoutAttribute* view1ImageHeight = [NSLayoutConstraint constraintWithItem:self.view1Image attribute:NSLayoutAttributeHeight relatedBy:NSLayoutRelationEquality toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1.0 constant:80];
  [self addConstraint:view1ImageHeight];
  NSLayoutAttribute* view1ImageWidth = [NSLayoutConstraint constraintWithItem:self.view1Image attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEquality toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1.0 constant:80];
  [self addConstraint:view1ImageWidth];
  NSLayoutAttribute* view1ImageLeft = [NSLayoutConstraint constraintWithItem:self.view1Image attribute:NSLayoutAttributeLeft relatedBy:NSLayoutRelationEquality toItem:self.view1Label attribute:NSLayoutAttributeLeft multiplier:1.0 constant:0];
  [self addConstraint:view1ImageLeft];
  NSLayoutAttribute* view1ImageTop = [NSLayoutConstraint constraintWithItem:self.view1Image attribute:NSLayoutAttributeTop relatedBy:NSLayoutRelationEquality toItem:self.view1Button attribute:NSLayoutAttributeBottom multiplier:1.0 constant:20];
  [self addConstraint:view1ImageTop];
}

#pragma mark - Lazy Getters

- (UILabel*)view1Label {
  if (_view1Label) {
    return _view1Label;
  }
  _view1Label = [[UILabel alloc] init];
  _view1Label.text = NSLocalizedString(@"GREETING", nil);
  _view1Label.textColor = [UIColor view1LabelColor];
  _view1Label.font = [UIFont standardFont];
  return _view1Label;
}

- (UITextField*)view1Field {
  if (_view1Field) {
    return _view1Field;
  }
  _view1Field = [[UITextField alloc] init];
  _view1Field.textColor = [UIColor view1TextFieldColor];
  _view1Field.font = [UIFont standardFont];
  NSDictionary* placeholderAttributes = @{NSForegroundColorAttributeName : [UIColor placeholderTextFieldColor], NSFontAttributeName : [UIFont placeholderFont]};
  NSAttributedString* placeholder = [[NSAttributedString alloc] initWithString:NSLocalizedString(@"VIEW_1_PLACEHOLDER", nil) attributes:placeholderAttributes];
  _view1Field.attributedPlaceholder = placeholder;
  return _view1Field;
}

- (UIButton*)view1Button {
  if (_view1Button) {
    return _view1Button;
  }
  _view1Button = [[UIButton alloc] init];
  [_view1Button setTitle:NSLocalizedString(@"NEXT", nil) forState:UIControlStateNormal];
  [_view1Button setTitleColor:[UIColor view1ButtonColor] forState:UIControlStateNormal];
  _view1Button.titleLabel.font = [UIFont buttonFont];
  return _view1Button;
}

- (UIImageView*)view1Image {
  if (_view1Image) {
    return _view1Image;
  }
  _view1Image = [[UIImageView alloc] init];
  _view1Image.imageView = [UIImage imageNamed:@"firstImage"];
  return _view1Image;
}

@end
