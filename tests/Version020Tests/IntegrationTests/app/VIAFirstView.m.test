//
// VIAFirstView.m
// ViewIntegrationApp
//
// Created By James Bowen 3/30/2016
// Copyright (c) 2016 One Week Apps. All Rights Reserved
//

#import "VIAFirstView.h"
#import "UIColor+IGAColors.h"
#import "UIFont+IGAFonts.h"

@interface VIAFirstView ()

@property (nonatomic, strong) UILabel* view1label;
@property (nonatomic, strong) UITextField* view1Field;
@property (nonatomic, strong) UIButton* view1Button;
@property (nonatomic, strong) UIImageView* view1Image;

@end

@implementation VIAFirstView

#pragma mark - Lifecycle

- (instancetype)init {
  self = [super init];
  if (self) {
    [self setupViews];
    [self setupConstraints];
  }
  return self;
}

#pragma mark - Setup

- (void)setupViews {
  NSArray* subviews = @[self.view1label, self.view1Field, self.view1Button, self.view1Image];
  for (UIView* view in subviews) {
    view.translatesAutoresizingMaskIntoConstraints = NO;
    [self addSubview:view];
  }
}

- (void)setupConstraints {
  NSLayoutConstraint* view1labelHeight = [NSLayoutConstraint constraintWithItem:self.view1label attribute:NSLayoutAttributeHeight relatedBy:NSLayoutRelationEquality toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1.0 constant:50.0];
  [self addConstraint:view1labelHeight];
  NSLayoutConstraint* view1labelWidth = [NSLayoutConstraint constraintWithItem:self.view1label attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEquality toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1.0 constant:100.0];
  [self addConstraint:view1labelWidth];
  NSLayoutConstraint* view1labelLeft = [NSLayoutConstraint constraintWithItem:self.view1label attribute:NSLayoutAttributeLeft relatedBy:NSLayoutRelationEquality toItem:self attribute:NSLayoutAttributeLeft multiplier:1.0 constant:40.0];
  [self addConstraint:view1labelLeft];
  NSLayoutConstraint* view1labelTop = [NSLayoutConstraint constraintWithItem:self.view1label attribute:NSLayoutAttributeTop relatedBy:NSLayoutRelationEquality toItem:self attribute:NSLayoutAttributeTop multiplier:1.0 constant:40.0];
  [self addConstraint:view1labelTop];
  NSLayoutConstraint* view1FieldHeight = [NSLayoutConstraint constraintWithItem:self.view1Field attribute:NSLayoutAttributeHeight relatedBy:NSLayoutRelationEquality toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1.0 constant:50.0];
  [self addConstraint:view1FieldHeight];
  NSLayoutConstraint* view1FieldWidth = [NSLayoutConstraint constraintWithItem:self.view1Field attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEquality toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1.0 constant:200.0];
  [self addConstraint:view1FieldWidth];
  NSLayoutConstraint* view1FieldLeft = [NSLayoutConstraint constraintWithItem:self.view1Field attribute:NSLayoutAttributeLeft relatedBy:NSLayoutRelationEquality toItem:self.view1label attribute:NSLayoutAttributeLeft multiplier:1.0 constant:0.0];
  [self addConstraint:view1FieldLeft];
  NSLayoutConstraint* view1FieldTop = [NSLayoutConstraint constraintWithItem:self.view1Field attribute:NSLayoutAttributeTop relatedBy:NSLayoutRelationEquality toItem:self.view1label attribute:NSLayoutAttributeBottom multiplier:1.0 constant:20.0];
  [self addConstraint:view1FieldTop];
  NSLayoutConstraint* view1ButtonHeight = [NSLayoutConstraint constraintWithItem:self.view1Button attribute:NSLayoutAttributeHeight relatedBy:NSLayoutRelationEquality toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1.0 constant:50.0];
  [self addConstraint:view1ButtonHeight];
  NSLayoutConstraint* view1ButtonWidth = [NSLayoutConstraint constraintWithItem:self.view1Button attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEquality toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1.0 constant:100.0];
  [self addConstraint:view1ButtonWidth];
  NSLayoutConstraint* view1ButtonLeft = [NSLayoutConstraint constraintWithItem:self.view1Button attribute:NSLayoutAttributeLeft relatedBy:NSLayoutRelationEquality toItem:self.view1label attribute:NSLayoutAttributeLeft multiplier:1.0 constant:0.0];
  [self addConstraint:view1ButtonLeft];
  NSLayoutConstraint* view1ButtonTop = [NSLayoutConstraint constraintWithItem:self.view1Button attribute:NSLayoutAttributeTop relatedBy:NSLayoutRelationEquality toItem:self.view1Field attribute:NSLayoutAttributeBottom multiplier:1.0 constant:30.0];
  [self addConstraint:view1ButtonTop];
  NSLayoutConstraint* view1ImageHeight = [NSLayoutConstraint constraintWithItem:self.view1Image attribute:NSLayoutAttributeHeight relatedBy:NSLayoutRelationEquality toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1.0 constant:80.0];
  [self addConstraint:view1ImageHeight];
  NSLayoutConstraint* view1ImageWidth = [NSLayoutConstraint constraintWithItem:self.view1Image attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEquality toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1.0 constant:80.0];
  [self addConstraint:view1ImageWidth];
  NSLayoutConstraint* view1ImageLeft = [NSLayoutConstraint constraintWithItem:self.view1Image attribute:NSLayoutAttributeLeft relatedBy:NSLayoutRelationEquality toItem:self.view1label attribute:NSLayoutAttributeLeft multiplier:1.0 constant:0.0];
  [self addConstraint:view1ImageLeft];
  NSLayoutConstraint* view1ImageTop = [NSLayoutConstraint constraintWithItem:self.view1Image attribute:NSLayoutAttributeTop relatedBy:NSLayoutRelationEquality toItem:self.view1Button attribute:NSLayoutAttributeBottom multiplier:1.0 constant:20.0];
  [self addConstraint:view1ImageTop];
}

#pragma mark - Lazy Getters

- (UILabel*)view1label {
  if (_view1label) {
    return _view1label;
  }
  _view1label = [[UILabel alloc] init];
  _view1label.text = NSLocalizedString(@"GREETING", nil);
  _view1label.textColor = [UIColor view1labelColor];
  _view1label.font = [UIFont standardFont];
  return _view1label;
}

- (UITextField*)view1Field {
  if (_view1Field) {
    return _view1Field;
  }
  _view1Field = [[UITextField alloc] init];
  _view1Field.textColor = [UIColor view1TextFieldColor];
  _view1Field.font = [UIFont standardFont];
  NSDictionary* placeholderAttributes = @{NSForegroundColorAttributeName : [UIColor placeholderTextFieldColor], NSFontAttributeName : [UIFont placeholderFont]};
  NSAttributedString* placeholder = [[NSAttributedString alloc] initWithString:NSLocalizedString(@"VIEW_1_PLACEHOLDER", nil) attributes:placeholderAttributes];
  _view1Field.attributedPlaceholder = placeholder;
  return _view1Field;
}

- (UIButton*)view1Button {
  if (_view1Button) {
    return _view1Button;
  }
  _view1Button = [[UIButton alloc] init];
  [_view1Button setTitle:NSLocalizedString(@"NEXT", nil) forState:UIControlStateNormal];
  [_view1Button setTitleColor:[UIColor view1ButtonColor] forState:UIControlStateNormal];
  _view1Button.titleLabel.font = [UIFont buttonFont];
  return _view1Button;
}

- (UIImageView*)view1Image {
  if (_view1Image) {
    return _view1Image;
  }
  _view1Image = [[UIImageView alloc] init];
  _view1Image.image = [UIImage imageNamed:@"firstImage"];
  return _view1Image;
}

@end
