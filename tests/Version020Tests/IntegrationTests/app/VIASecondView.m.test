//
// VIASecondView.m
// ViewIntegrationApp
//
// Created By James Bowen 3/30/2016
// Copyright (c) 2016 One Week Apps. All Rights Reserved
//

#import "VIASecondView.h"
#import "UIColor+IGAColors.h"
#import "UIFont+IGAFonts.h"

@interface VIASecondView ()

@property (nonatomic, strong) UILabel* firstLabel;
@property (nonatomic, strong) UILabel* secondLabel;
@property (nonatomic, strong) UIButton* firstButton;
@property (nonatomic, strong) UIButton* secondButton;

@end

@implementation VIASecondView

#pragma mark - Lifecycle

- (instancetype)init {
  self = [super init];
  if (self) {
    [self setupViews];
    [self setupConstraints];
  }
  return self;
}

#pragma mark - Setup

- (void)setupViews {
  NSArray* subviews = @[self.firstLabel, self.secondLabel, self.firstButton, self.secondButton];
  for (UIView* view in subviews) {
    view.translatesAutoresizingMaskIntoConstraints = NO;
    [self addSubview:view];
  }
}

- (void)setupConstraints {
  NSLayoutConstraint* firstLabelHeight = [NSLayoutConstraint constraintWithItem:self.firstLabel attribute:NSLayoutAttributeHeight relatedBy:NSLayoutRelationEquality toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1.0 constant:30.0];
  [self addConstraint:firstLabelHeight];
  NSLayoutConstraint* firstLabelWidth = [NSLayoutConstraint constraintWithItem:self.firstLabel attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEquality toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1.0 constant:100.0];
  [self addConstraint:firstLabelWidth];
  NSLayoutConstraint* firstLabelLeft = [NSLayoutConstraint constraintWithItem:self.firstLabel attribute:NSLayoutAttributeLeft relatedBy:NSLayoutRelationEquality toItem:self attribute:NSLayoutAttributeLeft multiplier:1.0 constant:40.0];
  [self addConstraint:firstLabelLeft];
  NSLayoutConstraint* firstLabelTop = [NSLayoutConstraint constraintWithItem:self.firstLabel attribute:NSLayoutAttributeTop relatedBy:NSLayoutRelationEquality toItem:self attribute:NSLayoutAttributeTop multiplier:1.0 constant:40.0];
  [self addConstraint:firstLabelTop];
  NSLayoutConstraint* secondLabelHeight = [NSLayoutConstraint constraintWithItem:self.secondLabel attribute:NSLayoutAttributeHeight relatedBy:NSLayoutRelationEquality toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1.0 constant:30.0];
  [self addConstraint:secondLabelHeight];
  NSLayoutConstraint* secondLabelWidth = [NSLayoutConstraint constraintWithItem:self.secondLabel attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEquality toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1.0 constant:100.0];
  [self addConstraint:secondLabelWidth];
  NSLayoutConstraint* secondLabelLeft = [NSLayoutConstraint constraintWithItem:self.secondLabel attribute:NSLayoutAttributeLeft relatedBy:NSLayoutRelationEquality toItem:self.firstLabel attribute:NSLayoutAttributeLeft multiplier:1.0 constant:0.0];
  [self addConstraint:secondLabelLeft];
  NSLayoutConstraint* secondLabelTop = [NSLayoutConstraint constraintWithItem:self.secondLabel attribute:NSLayoutAttributeTop relatedBy:NSLayoutRelationEquality toItem:self.firstLabel attribute:NSLayoutAttributeBottom multiplier:1.0 constant:20.0];
  [self addConstraint:secondLabelTop];
  NSLayoutConstraint* firstButtonHeight = [NSLayoutConstraint constraintWithItem:self.firstButton attribute:NSLayoutAttributeHeight relatedBy:NSLayoutRelationEquality toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1.0 constant:50.0];
  [self addConstraint:firstButtonHeight];
  NSLayoutConstraint* firstButtonWidth = [NSLayoutConstraint constraintWithItem:self.firstButton attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEquality toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1.0 constant:100.0];
  [self addConstraint:firstButtonWidth];
  NSLayoutConstraint* firstButtonLeft = [NSLayoutConstraint constraintWithItem:self.firstButton attribute:NSLayoutAttributeLeft relatedBy:NSLayoutRelationEquality toItem:self.firstLabel attribute:NSLayoutAttributeRight multiplier:1.0 constant:50.0];
  [self addConstraint:firstButtonLeft];
  NSLayoutConstraint* firstButtonCenterY = [NSLayoutConstraint constraintWithItem:self.firstButton attribute:NSLayoutAttributeCenterY relatedBy:NSLayoutRelationEquality toItem:self.firstLabel attribute:NSLayoutAttributeCenterY multiplier:1.0 constant:0.0];
  [self addConstraint:firstButtonCenterY];
  NSLayoutConstraint* secondButtonHeight = [NSLayoutConstraint constraintWithItem:self.secondButton attribute:NSLayoutAttributeHeight relatedBy:NSLayoutRelationEquality toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1.0 constant:50.0];
  [self addConstraint:secondButtonHeight];
  NSLayoutConstraint* secondButtonWidth = [NSLayoutConstraint constraintWithItem:self.secondButton attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEquality toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1.0 constant:100.0];
  [self addConstraint:secondButtonWidth];
  NSLayoutConstraint* secondButtonLeft = [NSLayoutConstraint constraintWithItem:self.secondButton attribute:NSLayoutAttributeLeft relatedBy:NSLayoutRelationEquality toItem:self.secondLabel attribute:NSLayoutAttributeRight multiplier:1.0 constant:50.0];
  [self addConstraint:secondButtonLeft];
  NSLayoutConstraint* secondButtonCenterY = [NSLayoutConstraint constraintWithItem:self.secondButton attribute:NSLayoutAttributeCenterY relatedBy:NSLayoutRelationEquality toItem:self.secondLabel attribute:NSLayoutAttributeCenterY multiplier:1.0 constant:0.0];
  [self addConstraint:secondButtonCenterY];
}

#pragma mark - Lazy Getters

- (UILabel*)firstLabel {
  if (_firstLabel) {
    return _firstLabel;
  }
  _firstLabel = [[UILabel alloc] init];
  _firstLabel.text = NSLocalizedString(@"OPTION_1", nil);
  _firstLabel.textColor = [UIColor view2TextColor];
  _firstLabel.font = [UIFont standardFont];
  return _firstLabel;
}

- (UILabel*)secondLabel {
  if (_secondLabel) {
    return _secondLabel;
  }
  _secondLabel = [[UILabel alloc] init];
  _secondLabel.text = NSLocalizedString(@"OPTION_2", nil);
  _secondLabel.textColor = [UIColor view2TextColor];
  _secondLabel.font = [UIFont standardFont];
  return _secondLabel;
}

- (UIButton*)firstButton {
  if (_firstButton) {
    return _firstButton;
  }
  _firstButton = [[UIButton alloc] init];
  [_firstButton setTitle:NSLocalizedString(@"SELECT_OPTION_1", nil) forState:UIControlStateNormal];
  [_firstButton setTitleColor:[UIColor view2TextColor] forState:UIControlStateNormal];
  _firstButton.titleLabel.font = [UIFont buttonFont];
  _firstButton.backgroundColor = [UIColor elementBackgroundColor];
  return _firstButton;
}

- (UIButton*)secondButton {
  if (_secondButton) {
    return _secondButton;
  }
  _secondButton = [[UIButton alloc] init];
  [_secondButton setTitle:NSLocalizedString(@"SELECT_OPTION_2", nil) forState:UIControlStateNormal];
  [_secondButton setTitleColor:[UIColor view2TextColor] forState:UIControlStateNormal];
  _secondButton.titleLabel.font = [UIFont buttonFont];
  return _secondButton;
}

@end
